beats(1,paper,stone).
beats(1,scissors,paper).
beats(1,stone,scissors).
beats(2,paper,stone).
beats(2,scissors,paper).
beats(2,stone,scissors).
beats(3,paper,stone).
beats(3,scissors,paper).
beats(3,stone,scissors).
beats(4,paper,stone).
beats(4,scissors,paper).
beats(4,stone,scissors).
my_succ(1,0,1).
my_succ(1,1,2).
my_succ(1,2,3).
my_succ(2,0,1).
my_succ(2,1,2).
my_succ(2,2,3).
my_succ(3,0,1).
my_succ(3,1,2).
my_succ(3,2,3).
my_succ(4,0,1).
my_succ(4,1,2).
my_succ(4,2,3).
my_true_score(1,p1,2).
my_true_score(1,p2,0).
my_true_score(2,p1,1).
my_true_score(2,p2,1).
my_true_score(3,p1,0).
my_true_score(3,p2,1).
my_true_score(4,p1,1).
my_true_score(4,p2,0).
my_true_step(1,2).
my_true_step(2,2).
my_true_step(3,1).
my_true_step(4,2).
not_beats(A,B,C) :- \+ beats(A,B,C).
not_my_succ(A,B,C) :- \+ my_succ(A,B,C).
not_my_true_score(A,B,C) :- \+ my_true_score(A,B,C).
not_my_true_step(A,B) :- \+ my_true_step(A,B).
not_player(A,B) :- \+ player(A,B).
player(1,p1).
player(1,p2).
player(2,p1).
player(2,p2).
player(3,p1).
player(3,p2).
player(4,p1).
player(4,p2).
pos(legal(1,p1,paper)).
pos(legal(1,p1,scissors)).
pos(legal(1,p1,stone)).
pos(legal(1,p2,paper)).
pos(legal(1,p2,scissors)).
pos(legal(1,p2,stone)).
pos(legal(2,p1,paper)).
pos(legal(2,p1,scissors)).
pos(legal(2,p1,stone)).
pos(legal(2,p2,paper)).
pos(legal(2,p2,scissors)).
pos(legal(2,p2,stone)).
pos(legal(3,p1,paper)).
pos(legal(3,p1,scissors)).
pos(legal(3,p1,stone)).
pos(legal(3,p2,paper)).
pos(legal(3,p2,scissors)).
pos(legal(3,p2,stone)).
pos(legal(4,p1,paper)).
pos(legal(4,p1,scissors)).
pos(legal(4,p1,stone)).
pos(legal(4,p2,paper)).
pos(legal(4,p2,scissors)).
pos(legal(4,p2,stone)).
prim(beats/3).
prim(my_succ/3).
prim(my_true_score/3).
prim(my_true_step/2).
prim(not_beats/3).
prim(not_my_succ/3).
prim(not_my_true_score/3).
prim(not_my_true_step/2).
prim(not_player/2).
prim(player/2).
